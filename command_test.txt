$ git add test.txt  //暂存区
$ git commit -m "注释"  //提交 注释一定要有
$ git checkout -- test.txt  // 丢弃工作区的修改 两种情况
//一种是test.txt自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；
一种是test.txt已经添加到暂存区后，又作了修改，现在撤销修改，就回到添加到暂存区后的状态。
$ git commit --amend   //修改之前的注释
$ cat test.txt     // cat + 文件名 显示内容
$ rm test.txt  //工作区删除文件
$ git commit -m "remove test.txt" //版本库删除文件
$ git status     //查看当前仓库的所有文件状态

$ git diff HEAD -- test.txt   //查看工作区和版本库里面最新版本的区别
$ git log //查看历史记录（最近两次）
$ git log --pretty=oneline （看最近两次删改记录的扼要信息）

$ git reset    //回退历史版本
$ git reset --hard HEAD^   //退3个版本  退两个就是HEAD^^3
$ git reflog  //查看版本号
$ git reset --hard 1094adb7 //配合上一步得到的版本号，回退到具体版本


$ git checkout -b dev    //创建并切换到dev分支
$ git branch dev          //创建
$ git checkout dev     //切换至dev  在dev里面修改文件
$ git branch              //查看分支  git branch命令会列出所有分支，当前分支前面会标一个*号
$ git merge dev    //git merge命令用于合并指定分支到当前分支
$ git branch -d dev     //删除分支

$ git remote    //查看远程库的信息
$ git remote -v     查看远程库的详细信息
$ git push origin master  //将本地master分支推送到远程库



